$import "Basic.apoc";
$import "C_Standard.apoc";
$import "Windows.apoc";


fn window_proc(
  window: *void,
  message: u32,
  wparam: u64,
  lparam: u64
) -> u64 {
	-> 0;
}

fn main() -> i32
{
	printf("Hello World!\n");
	instance := GetModuleHandleA(null);
	wnd_class: WNDCLASSA;
	wnd_class.style = CS_VREDRAW | CS_HREDRAW;
	wnd_class.wnd_proc = window_proc;
	wnd_class.instance = instance;
	wnd_class.class_name = "CompileTimeWindowClassName";
	atom := RegisterClassA(@wnd_class);
	if atom != 0 {
		printf("Failed to register class %d", GetLastError());
		-> 1;
	}
	window := CreateWindowA(wnd_class.class_name, "Compile Time Window", WS_OVERLAPPEDWINDOW | WS_VISIBLE, CW_USEDEFAULT, CW_USEDEFAULT, 1280, 720, null, null, instance, null);
	if window == null {
		printf("Failed to create window %d", GetLastError());
		-> 1;
	}
	-> 0;
}

$run main();

